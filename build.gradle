plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.thinkimi.gradle.MybatisGenerator" version "2.2"
    id "org.hidetake.ssh" version "2.10.1"
    id 'java'
}
repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}
group = 'com.github.viqbgrg'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}



sourceSets {
    // 使用创建工具
    if(project.gradle.startParameter.taskNames.contains("MysqlGenerator.main()")) {
        main.java.srcDirs = ['src/main/java/com/github/viqbgrg/springbootoverseer/mybatis/generator']
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'com.auth0:java-jwt:3.10.3'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0-RC1'
    implementation 'cn.hutool:hutool-crypto:5.4.5'
    implementation 'org.zalando:problem-spring-web-starter:0.26.2'
    runtimeOnly group: 'mysql', name: 'mysql-connector-java'
    implementation 'org.hibernate:hibernate-validator:7.0.0.Alpha6'
    runtimeOnly 'org.freemarker:freemarker:2.3.30'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'com.baomidou:mybatis-plus-generator:3.5.0-20201218.101153-3'
//    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
    implementation group: 'com.baomidou', name: 'mybatis-plus-boot-starter', version: '3.1.2'
    implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-jdbc'
        exclude group: 'org.mybatis', module: 'mybatis'
        exclude group: 'org.mybatis', module: 'mybatis-spring'
    }
    implementation group: 'org.apache.shiro', name: 'shiro-spring-boot-web-starter', version: '1.6.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.1.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

ssh.settings {
    knownHosts = allowAnyHosts
}
remotes {
    cc {
        host = remote_host
        port = 9169
        user = remote_user
        password = remote_password
    }
}

task remoteDeploy(dependsOn: [clean, bootJar]) {
    doLast {
        ssh.run {
            session(remotes.cc) {
                // Execute a command
                def result = execute 'service overseer restart'

                // Any Gradle methods or properties are available in a session closure
                put from:bootJar.archiveFile.get().toString(), into:"/root/overseer/"


                // Also Groovy methods or properties are available in a session closure
                println result
            }
        }
    }
}